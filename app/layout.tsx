import type { Metadata } from "next";
import type { PropsWithChildren } from "react";
import classNames from "classnames";
import { openSans, roboto } from "@/features/theme/fonts";
import { Providers, Sidebar } from "./(components)";
import { getSettings } from "./api/settings/getSettings";
import type { SettingsValues } from "@/features/db/schema";
import { Seeder } from "./(seeder)";
import { APP_BAR_HEIGHT } from "./(components)/sidebar/config";
import { Box } from "@chakra-ui/react";
import { SIDEBAR_WIDTH } from "@/features/theme/constants";
import { z } from "zod";

export const metadata: Metadata = {
  title: "Inventory",
  description: "Generated by create next app",
};

export const dynamic = "force-dynamic";

export default async function RootLayout({ children }: PropsWithChildren) {
  let hasInstalled = false;
  let settings: SettingsValues | undefined;
  try {
    settings = await getSettings();
    hasInstalled = true;
  } catch (e) {
    console.warn(e);
    console.log("No settings detected, redirecting to onboarding page...");
  } finally {
    return (
      <html
        lang="en"
        className={classNames(roboto.className, openSans.className)}
        suppressHydrationWarning
      >
        <body>
          <Providers settings={z.object({ itemsPerPage: z.number() }).parse(settings)}>
            {hasInstalled ? (
              <Box
                as="main"
                minH="100svh"
                display="grid"
                gridTemplateColumns={["1fr", `${SIDEBAR_WIDTH}px 1fr`]}
                h="100%"
                pb={[`${APP_BAR_HEIGHT}px`, 0]}
              >
                <Sidebar />
                <div>{children}</div>
              </Box>
            ) : (
              <Seeder />
            )}
          </Providers>
        </body>
      </html>
    );
  }
}
